Scalar const c0 = pow(omega[0], 2);
Scalar const c1 = pow(omega[1], 2);
Scalar const c2 = pow(omega[2], 2);
Scalar const c3 = c0 + c1 + c2;
Scalar const c4 = sqrt(c3);
Scalar const c5 = 1.0/c4;
Scalar const c6 = 0.5*c4;
Scalar const c7 = sin(c6);
Scalar const c8 = c5*c7;
Scalar const c9 = pow(c3, -3.0L/2.0L);
Scalar const c10 = c7*c9;
Scalar const c11 = 1.0/c3;
Scalar const c12 = cos(c6);
Scalar const c13 = 0.5*c11*c12;
Scalar const c14 = c7*c9*omega[0];
Scalar const c15 = 0.5*c11*c12*omega[0];
Scalar const c16 = -c14*omega[1] + c15*omega[1];
Scalar const c17 = -c14*omega[2] + c15*omega[2];
Scalar const c18 = omega[1]*omega[2];
Scalar const c19 = -c10*c18 + c13*c18;
Scalar const c20 = c5*omega[0];
Scalar const c21 = 0.5*c7;
Scalar const c22 = c5*omega[1];
Scalar const c23 = c5*omega[2];
Scalar const c24 = -c1;
Scalar const c25 = -c2;
Scalar const c26 = c24 + c25;
Scalar const c27 = sin(c4);
Scalar const c28 = -c27 + c4;
Scalar const c29 = c28*c9;
Scalar const c30 = cos(c4);
Scalar const c31 = -c30 + 1;
Scalar const c32 = c11*c31;
Scalar const c33 = c32*omega[2];
Scalar const c34 = c29*omega[0];
Scalar const c35 = c34*omega[1];
Scalar const c36 = c32*omega[1];
Scalar const c37 = c34*omega[2];
Scalar const c38 = pow(c3, -5.0L/2.0L);
Scalar const c39 = 3*c28*c38*omega[0];
Scalar const c40 = c26*c9;
Scalar const c41 = -c20*c30 + c20;
Scalar const c42 = c27*c9*omega[0];
Scalar const c43 = c42*omega[1];
Scalar const c44 = pow(c3, -2);
Scalar const c45 = 2*c31*c44*omega[0];
Scalar const c46 = c45*omega[1];
Scalar const c47 = c29*omega[2];
Scalar const c48 = c43 - c46 + c47;
Scalar const c49 = 3*c0*c28*c38;
Scalar const c50 = c9*omega[0]*omega[2];
Scalar const c51 = c41*c50 - c49*omega[2];
Scalar const c52 = c9*omega[0]*omega[1];
Scalar const c53 = c41*c52 - c49*omega[1];
Scalar const c54 = c42*omega[2];
Scalar const c55 = c45*omega[2];
Scalar const c56 = c29*omega[1];
Scalar const c57 = -c54 + c55 + c56;
Scalar const c58 = -2*c56;
Scalar const c59 = 3*c28*c38*omega[1];
Scalar const c60 = -c22*c30 + c22;
Scalar const c61 = -c18*c39;
Scalar const c62 = c32 + c61;
Scalar const c63 = c27*c9;
Scalar const c64 = c1*c63;
Scalar const c65 = 2*c31*c44;
Scalar const c66 = c1*c65;
Scalar const c67 = c50*c60;
Scalar const c68 = -c1*c39 + c52*c60;
Scalar const c69 = c18*c63;
Scalar const c70 = c18*c65;
Scalar const c71 = c34 - c69 + c70;
Scalar const c72 = -2*c47;
Scalar const c73 = 3*c28*c38*omega[2];
Scalar const c74 = -c23*c30 + c23;
Scalar const c75 = -c32 + c61;
Scalar const c76 = c2*c63;
Scalar const c77 = c2*c65;
Scalar const c78 = c52*c74;
Scalar const c79 = c34 + c69 - c70;
Scalar const c80 = -c2*c39 + c50*c74;
Scalar const c81 = -c0;
Scalar const c82 = c25 + c81;
Scalar const c83 = c32*omega[0];
Scalar const c84 = c18*c29;
Scalar const c85 = -2*c34;
Scalar const c86 = c82*c9;
Scalar const c87 = c0*c63;
Scalar const c88 = c0*c65;
Scalar const c89 = c9*omega[1]*omega[2];
Scalar const c90 = c41*c89;
Scalar const c91 = c54 - c55 + c56;
Scalar const c92 = -c1*c73 + c60*c89;
Scalar const c93 = -c43 + c46 + c47;
Scalar const c94 = -c2*c59 + c74*c89;
Scalar const c95 = c24 + c81;
Scalar const c96 = c9*c95;
result[0] = 0;
result[1] = 0;
result[2] = 0;
result[3] = -c0*c10 + c0*c13 + c8;
result[4] = c16;
result[5] = c17;
result[6] = 0;
result[7] = 0;
result[8] = 0;
result[9] = c16;
result[10] = -c1*c10 + c1*c13 + c8;
result[11] = c19;
result[12] = 0;
result[13] = 0;
result[14] = 0;
result[15] = c17;
result[16] = c19;
result[17] = -c10*c2 + c13*c2 + c8;
result[18] = 0;
result[19] = 0;
result[20] = 0;
result[21] = -c20*c21;
result[22] = -c21*c22;
result[23] = -c21*c23;
result[24] = c26*c29 + 1;
result[25] = -c33 + c35;
result[26] = c36 + c37;
result[27] = upsilon[0]*(-c26*c39 + c40*c41) + upsilon[1]*(c53 + c57) + upsilon[2]*(c48 + c51);
result[28] = upsilon[0]*(-c26*c59 + c40*c60 + c58) + upsilon[1]*(c68 + c71) + upsilon[2]*(c62 + c64 - c66 + c67);
result[29] = upsilon[0]*(-c26*c73 + c40*c74 + c72) + upsilon[1]*(c75 - c76 + c77 + c78) + upsilon[2]*(c79 + c80);
result[30] = c33 + c35;
result[31] = c29*c82 + 1;
result[32] = -c83 + c84;
result[33] = upsilon[0]*(c53 + c91) + upsilon[1]*(-c39*c82 + c41*c86 + c85) + upsilon[2]*(c75 - c87 + c88 + c90);
result[34] = upsilon[0]*(c68 + c79) + upsilon[1]*(-c59*c82 + c60*c86) + upsilon[2]*(c92 + c93);
result[35] = upsilon[0]*(c62 + c76 - c77 + c78) + upsilon[1]*(c72 - c73*c82 + c74*c86) + upsilon[2]*(c57 + c94);
result[36] = -c36 + c37;
result[37] = c83 + c84;
result[38] = c29*c95 + 1;
result[39] = upsilon[0]*(c51 + c93) + upsilon[1]*(c62 + c87 - c88 + c90) + upsilon[2]*(-c39*c95 + c41*c96 + c85);
result[40] = upsilon[0]*(-c64 + c66 + c67 + c75) + upsilon[1]*(c48 + c92) + upsilon[2]*(c58 - c59*c95 + c60*c96);
result[41] = upsilon[0]*(c71 + c80) + upsilon[1]*(c91 + c94) + upsilon[2]*(-c73*c95 + c74*c96);
