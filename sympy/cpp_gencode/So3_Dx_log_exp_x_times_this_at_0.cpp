Scalar const c0 = pow(omega[0], 2);
Scalar const c1 = pow(omega[1], 2);
Scalar const c2 = pow(omega[2], 2);
Scalar const c3 = c0 + c1 + c2;
Scalar const c4 = sqrt(c3);
Scalar const c5 = 0.5*c4;
Scalar const c6 = sin(c5);
Scalar const c7 = c6/c4;
Scalar const c8 = c7*q.w();
Scalar const c9 = c7*q.x();
Scalar const c10 = c9*omega[0];
Scalar const c11 = c6/pow(c3, 3.0/2.0);
Scalar const c12 = c11*omega[0];
Scalar const c13 = c12*q.y();
Scalar const c14 = c13*omega[2];
Scalar const c15 = c12*q.z();
Scalar const c16 = c15*omega[1];
Scalar const c17 = cos(c5);
Scalar const c18 = c17*q.z();
Scalar const c19 = 1.0/c3;
Scalar const c20 = c19*omega[0];
Scalar const c21 = c20*omega[1];
Scalar const c22 = c18*c21;
Scalar const c23 = 0.5*c22;
Scalar const c24 = c20*omega[2];
Scalar const c25 = c17*q.y();
Scalar const c26 = 0.5*c25;
Scalar const c27 = c24*c26;
Scalar const c28 = c0*c11;
Scalar const c29 = c28*q.w();
Scalar const c30 = c17*q.w();
Scalar const c31 = c0*c19;
Scalar const c32 = c30*c31;
Scalar const c33 = c7*q.y();
Scalar const c34 = c33*omega[1];
Scalar const c35 = c7*q.z();
Scalar const c36 = c35*omega[2];
Scalar const c37 = -c10 + c30 - c34 - c36;
Scalar const c38 = 1.0/c37;
Scalar const c39 = c17*q.x();
Scalar const c40 = c8*omega[0];
Scalar const c41 = c35*omega[1];
Scalar const c42 = c33*omega[2];
Scalar const c43 = c39 + c40 + c41 - c42;
Scalar const c44 = c33*omega[0];
Scalar const c45 = c8*omega[2];
Scalar const c46 = c9*omega[1];
Scalar const c47 = c18 + c44 + c45 - c46;
Scalar const c48 = c8*omega[1];
Scalar const c49 = c9*omega[2];
Scalar const c50 = c35*omega[0];
Scalar const c51 = c25 + c48 + c49 - c50;
Scalar const c52 = pow(c43, 2) + pow(c47, 2) + pow(c51, 2);
Scalar const c53 = sqrt(c52);
Scalar const c54 = atan(c38*c53);
Scalar const c55 = 1.0/c53;
Scalar const c56 = 2*c55;
Scalar const c57 = c54*c56;
Scalar const c58 = 2*c8;
Scalar const c59 = 2*c16;
Scalar const c60 = 2*c14;
Scalar const c61 = 1.0*c25;
Scalar const c62 = (1.0/2.0)*c43;
Scalar const c63 = c62*(-1.0*c10 + c22 - c24*c61 - 2*c29 + c32 + c58 - c59 + c60);
Scalar const c64 = 2*c33;
Scalar const c65 = c25*c31;
Scalar const c66 = c28*q.y();
Scalar const c67 = c12*omega[1];
Scalar const c68 = c67*q.x();
Scalar const c69 = c21*c39;
Scalar const c70 = c24*c30;
Scalar const c71 = c12*omega[2];
Scalar const c72 = c71*q.w();
Scalar const c73 = c70 - 2*c72;
Scalar const c74 = (1.0/2.0)*c47;
Scalar const c75 = c74*(-1.0*c50 + c64 + c65 - 2*c66 + 2*c68 - 1.0*c69 + c73);
Scalar const c76 = 2*c35;
Scalar const c77 = c28*q.z();
Scalar const c78 = 1.0*c18;
Scalar const c79 = c24*c39;
Scalar const c80 = c71*q.x();
Scalar const c81 = c21*c30;
Scalar const c82 = c67*q.w();
Scalar const c83 = c81 - 2*c82;
Scalar const c84 = (1.0/2.0)*c51;
Scalar const c85 = c84*(-c31*c78 - 1.0*c44 - c76 + 2*c77 + c79 - 2*c80 + c83);
Scalar const c86 = -c63 - c75 - c85;
Scalar const c87 = 2*c54/pow(c52, 3.0/2.0);
Scalar const c88 = c43*c87;
Scalar const c89 = 0.5*c31;
Scalar const c90 = c15*omega[2];
Scalar const c91 = 0.5*c18;
Scalar const c92 = c24*c91;
Scalar const c93 = c13*omega[1];
Scalar const c94 = c21*c26 - c93;
Scalar const c95 = pow(c37, -2);
Scalar const c96 = c53*c95;
Scalar const c97 = c38*c55;
Scalar const c98 = c96*(-c28*q.x() + c39*c89 + 0.5*c40 + c9 - c90 + c92 + c94) + c97*(c63 + c75 + c85);
Scalar const c99 = c56/(c52*c95 + 1);
Scalar const c100 = c43*c99;
Scalar const c101 = c1*c11;
Scalar const c102 = c101*q.z();
Scalar const c103 = c1*c19;
Scalar const c104 = c103*c18;
Scalar const c105 = omega[1]*omega[2];
Scalar const c106 = c105*c11;
Scalar const c107 = c106*q.y();
Scalar const c108 = c105*c19;
Scalar const c109 = c108*c26;
Scalar const c110 = 0.5*c81 - c82;
Scalar const c111 = c62*(-2*c102 + c104 + 2*c107 - c108*c61 - 1.0*c46 + c76 + c83);
Scalar const c112 = 2*c9;
Scalar const c113 = c101*q.x();
Scalar const c114 = c103*c39;
Scalar const c115 = c108*c30;
Scalar const c116 = c106*q.w();
Scalar const c117 = c115 - 2*c116;
Scalar const c118 = c74*(-c112 + 2*c113 - 1.0*c114 + c117 + c21*c25 - 1.0*c41 - 2*c93);
Scalar const c119 = c108*c39;
Scalar const c120 = c103*c30;
Scalar const c121 = c106*q.x();
Scalar const c122 = 2*c121;
Scalar const c123 = c101*q.w();
Scalar const c124 = c84*(c119 + c120 - c122 - 2*c123 - 1.0*c22 - 1.0*c34 + c58 + c59);
Scalar const c125 = -c111 - c118 - c124;
Scalar const c126 = 0.5*c69;
Scalar const c127 = c106*q.z();
Scalar const c128 = c108*c91 - c127;
Scalar const c129 = c96*(-c101*q.y() + c103*c26 + c126 + c128 + c33 + 0.5*c48 - c68) + c97*(c111 + c118 + c124);
Scalar const c130 = c11*c2;
Scalar const c131 = c130*q.y();
Scalar const c132 = c19*c2;
Scalar const c133 = 0.5*c70 - c72;
Scalar const c134 = c62*(c108*c18 - 2*c127 + 2*c131 - c132*c61 - 1.0*c49 - c64 + c73);
Scalar const c135 = c132*c30;
Scalar const c136 = c130*q.w();
Scalar const c137 = c74*(-1.0*c119 + c122 + c135 - 2*c136 + c24*c25 - 1.0*c36 + c58 - c60);
Scalar const c138 = c132*c39;
Scalar const c139 = c130*q.x();
Scalar const c140 = c84*(c112 + c117 + c138 - 2*c139 - c24*c78 - 1.0*c42 + 2*c90);
Scalar const c141 = -c134 - c137 - c140;
Scalar const c142 = 0.5*c79 - c80;
Scalar const c143 = c96*(-c107 + c109 - c130*q.z() + c132*c91 + c142 + c35 + 0.5*c45) + c97*(c134 + c137 + c140);
Scalar const c144 = c51*c87;
Scalar const c145 = c51*c99;
Scalar const c146 = 0.5*c119;
Scalar const c147 = 0.5*c115 - c116;
Scalar const c148 = c47*c87;
Scalar const c149 = c47*c99;
result[0] = c100*c98 + c57*(-0.5*c10 + c14 - c16 + c23 - c27 - c29 + 0.5*c32 + c8) + c86*c88;
result[1] = c100*c129 + c125*c88 + c57*(-c102 + 0.5*c104 + c107 - c109 + c110 + c35 - 0.5*c46);
result[2] = c100*c143 + c141*c88 + c57*(c128 + c131 - c132*c26 + c133 - c33 - 0.5*c49);
result[3] = c144*c86 + c145*c98 + c57*(c110 + c142 - c18*c89 - c35 - 0.5*c44 + c77);
result[4] = c125*c144 + c129*c145 + c57*(0.5*c120 - c121 - c123 + c146 + c16 - c23 - 0.5*c34 + c8);
result[5] = c141*c144 + c143*c145 + c57*(0.5*c138 - c139 + c147 - 0.5*c42 + c9 + c90 - c92);
result[6] = c148*c86 + c149*c98 + c57*(-c126 + c133 + c33 - 0.5*c50 + 0.5*c65 - c66 + c68);
result[7] = c125*c148 + c129*c149 + c57*(c113 - 0.5*c114 + c147 - 0.5*c41 - c9 + c94);
result[8] = c141*c148 + c143*c149 + c57*(c121 + 0.5*c135 - c136 - c14 - c146 + c27 - 0.5*c36 + c8);
